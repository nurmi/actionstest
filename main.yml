# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build a Container Image
        run: docker build -t localimage:latest .

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      - name: Anchore Container Scan
          # You may pin to the exact commit or the version.
          # uses: anchore/scan-action@3c947f31798e0e3e9fa2bf18282aeb57a1a4aaa5
        #uses: anchore/scan-action@v2.0.4
        uses: nurmi/scan-action@main
        with:
          # The image to scan. This option is mutually exclusive with "path". 
          image: localimage:latest
          # The path to scan. This option is mutually exclusive with "image".
          #path: # optional
          # Set this to any value to enable verbose debug output
          #debug: # optional, default is false
          # Set to any value to cause build to fail upon failed anchore policy evaluation
          #fail-build: # optional, default is false
          # Optionally, specify the Grype version (e.g. 0.1.0) to use instead of the default version
          grype-version: 0.15.0
          # Optionally, enable feature that causes a result.sarif report to be generated after successful action execution.  This report is compatible with GitHub Automated Code Scanning (ACS), as the artifact to upload for display as a Code Scanning Alert report.
          #acs-report-enable: # optional, default is false
          # Optionally specify the minimum vulnerability severity to trigger an "error" level ACS result.  Valid choices are "negligible", "low", "medium", "high" and "critical".  Any vulnerability with a severity less than this value will lead to a "warning" result.  Default is "medium".
          #severity-cutoff: # optional, default is medium
